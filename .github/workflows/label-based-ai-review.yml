#name: 라벨 기반 AI 코드 리뷰
#
#permissions:
#  contents: read
#  pull-requests: write
#
#on:
#  pull_request:
#    types: [labeled, opened, synchronize]
#  # 댓글을 통한 대화 활성화
#  pull_request_review_comment:
#    types: [created]
#
#concurrency:
#  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
#  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}
#
#jobs:
#  review:
#    # "ai-review" 라벨이 있는 PR에만 실행
#    if: contains(github.event.pull_request.labels.*.name, 'ai-review') || github.event_name == 'pull_request_review_comment'
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3
#
#      # AleksandrFurmenkovOfficial/ai-code-review는 다양한 AI 모델 지원
#      - name: AI Code Review
#        uses: AleksandrFurmenkovOfficial/ai-code-review@v0.8
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          owner: ${{ github.repository_owner }}
#          repo: ${{ github.event.repository.name }}
#          pr_number: ${{ github.event.number }}
#
#          # OpenAI API를 사용하여 코드 리뷰 수행
#          ai_provider: 'openai'
#          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
#          openai_model: 'gpt-4o'
#
#          # 특정 파일 유형만 리뷰하도록 설정 (선택적)
#          include_extensions: '.py,.js,.tsx,.jsx,.ts,.java,.c,.cpp,.go'
#          # 마크다운, JSON 파일 등 리뷰에서 제외
#          exclude_extensions: '.md,.json,.lock,.yml,.yaml,.gitignore'
#          # 특정 경로 제외 (선택적)
#          exclude_paths: 'test/,docs/,node_modules/'