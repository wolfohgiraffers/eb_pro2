name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          MODEL: gpt-3.5-turbo
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          LANGUAGE: Korean
          PROMPT: |
            이 PR을 Google/Meta/Stripe 수준의 엄격한 코드 리뷰 관점으로 분석해주세요:
            
            1. 가독성과 명확성: 코드가 자체 문서화(self-documenting)되는가?
            2. 확장성: 미래 요구사항에 유연하게 대응 가능한가?
            3. 테스트 가능성: 단위 테스트로 검증 가능한 설계인가?
            4. 일관성: 프로젝트 컨벤션과 설계 패턴을 따르는가?
            5. 책임 분리: 각 구성요소가 단일 책임만 갖는가?
            
            피드백은:
              - P0(반드시 수정)/P1(중요)/P2(권장) 우선순위로 분류
              - 문제보다 해결책 중심으로 제시
              - 구체적인 코드 예시 포함
              - "왜" 변경이 필요한지 원칙과 함께 설명
            
            최고 수준의 코드만 승인하고, "잘 돌아가니까 괜찮아"는 수용하지 않음.
            이모티콘을 항상 활용할 것